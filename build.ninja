cxx = clang++ --target=i686-pc-none-elf
gnucxx = i686-elf-gcc
cflags = -ffreestanding -fno-exceptions -fno-rtti -mno-mmx -mno-sse -mno-sse2 -Wall -Wextra --std=c++1z -I.
ldflags = -nostdlib -fpic -L${HOME}/opt/cross/lib -T src/link.ld


rule link
  command = $cxx $ldflags $in -o $out

rule klink
  command = $cxx $ldflags $ctri $$($gnucxx $ldflags --print-file-name=crtbegin.o) $libk $$($gnucxx $ldflags --print-file-name=crtend.o) $crtn -o $out

rule cc
  deps = gcc
  depfile = $out.d
  command = $cxx -MMD -MF $out.d $cflags -c $in -o $out

rule static_lib
  command = ar rcs $out $in

build k.bin: klink src/libk/libk.a src/libk/boot/cwtop.o src/libk/boot/cwbottom.o
  crti = src/libk/boot/cwtop.o
  crtn = src/libk/boot/cwbottom.o
  libk = src/libk/libk.a

# libk
build src/libk/libk.a: static_lib src/libk/kernel.o src/libk/boot/boot.o src/libk/boot/cwtop.o src/libk/boot/cwbottom.o
libk = src/libk/kernel.o src/libk/boot/boot.o
crti = src/libk/boot/cwtop.o
crtn = src/libk/boot/cwbottom.o
build src/libk/kernel.o: cc src/libk/kernel.cc

# boot
build src/libk/boot/boot.o: cc src/libk/boot/boot.cc
build src/libk/boot/cwtop.o: cc src/libk/boot/cwtop.cc
build src/libk/boot/cwbottom.o: cc src/libk/boot/cwbottom.cc
